---
- name: Upgrading system
  apt:
    update_cache: yes
    upgrade: yes
    autoclean: yes
    autoremove: yes
    force_apt_get: yes

- name: Installing Docker 
  script: /home/mark/greenfox/hackathon/scripts/getdocker.sh

- name: Installing Docker-Compose
  apt:
    name: docker-compose
    state: present
    force_apt_get: yes

- name: Installing MySQL
  apt:
    name: mysql-client-5.7
    state: present
    force_apt_get: yes

- name: Creating user
  user:
    name: {{ USERNAME }}
    password: {{ PASSWORD }}
    shell: /bin/bash
    groups: sudo,docker
    append: yes

- name: Installing Elastic Stack
  git:
    repo: 'https://github.com/deviantony/docker-elk.git'
    dest: {{ PATH }}
    clone: yes

- name: Installing Pip3
  apt:
    name: python3-pip
    state: present

- name: Installing Docker SDK for Python
  pip:
    name:
      - docker
      - docker-compose
    state: present

- name: Setting virtual memory
  shell: sysctl -w vm.max_map_count=262144

- name: Running Elastic Stack
  docker_service:
    project_src: {{ PATH }}
    state: present

- name: Waiting for Elastic Stack
  wait_for:
    timeout: 180

- name: Installing Elastic Heartbeat
  apt:
    deb: https://artifacts.elastic.co/downloads/beats/heartbeat/heartbeat-7.3.1-amd64.deb
    state: present

- name: Configuring Elastic Heartbeat
  template: src={{ PATH }} dest={{ PATH }}

- name: Starting Elastic Heartbeat
  shell: service heartbeat-elastic stop && heartbeat setup
  notify: restart heartbeat

- name: Copying monitoring script
  become: yes
  become_user: {{ USERNAME }}
  copy:
    src: {{ PATH }}
    dest: {{ PATH }}
    owner: {{ USERNAME }}
    group: {{ USERNAME }}

- name: Install Mutt
  apt:
    name: mutt
    state: present
    force_apt_get: yes

- name: Managing crontab
  become: yes
  become_user: {{ USERNAME }}
  cron:
    name: "monitoring_script"
    minute: "*/5"
    job: "/usr/bin/python3 {{ PATH }}"
    state: present
    user: {{ USERNAME }}

- name: Copying configuration for SSHD
  template: src={{ PATH }} dest={{ PATH }}
  notify: restart sshd
